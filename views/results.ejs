<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Quiz Results</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
  <style>
    body {
      background: #f8f9fa;
    }
    .summary-table th,
    .summary-table td {
      text-align: center;
      vertical-align: middle;
    }
    .hover-highlight {
      cursor: pointer;
      transition: background-color 0.2s ease;
    }
    .hover-highlight:hover {
      background-color: #eef;
    }
    .answerCell {
      position: relative;
      width: 60px;
      height: 60px;
      text-align: center;
      border: 1px solid #ccc;
    }
    .pickOrder {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-weight: bold;
      color: #333;
    }
    .group-section {
      margin-bottom: 2rem;
      background: #fff;
      border-radius: 6px;
      padding: 1rem;
      box-shadow: 0 1px 4px rgba(0,0,0,0.1);
    }
    .group-section h3 {
      margin-bottom: 0.5rem;
    }
  </style>
</head>
<body class="bg-light">

<div class="container py-4">
  <h1 class="mb-3">Results for <%= form.quizTitle %></h1>
  <p><strong>Code:</strong> <%= form.code %></p>

  <%
    // letters = e.g. ['A','B','C','D','E'] but we only need up to form.optionCount if you prefer.
    const letters = ['A','B','C','D','E'];
    
    // 1) Build summaryStats => summaryStats[q][letter] = { count, groups[] }
    let summaryStats = [];
    for (let q = 0; q < form.questionCount; q++) {
      let letterMap = {};
      for (let L of letters.slice(0, form.optionCount)) {
        letterMap[L] = {
          count: 0,
          groups: []
        };
      }
      summaryStats.push(letterMap);
    }

    if (submissions && submissions.length > 0) {
      submissions.forEach(sub => {
        let picksData = [];
        try {
          picksData = JSON.parse(sub.answers);
        } catch(e) {
          picksData = [];
        }
        // for each question q => find first pick => increment summary
        for (let q = 0; q < form.questionCount; q++) {
          let questionPicks = picksData[q] || [];
          if (questionPicks.length > 0) {
            let firstPick = questionPicks[0];
            // only if firstPick is within letters
            if (summaryStats[q][firstPick]) {
              summaryStats[q][firstPick].count += 1;
              summaryStats[q][firstPick].groups.push(sub.groupName);
            }
          }
        }
      });
    }
  %>

  <!-- 2) Summary Table -->
  <h2>Summary of First Picks</h2>
  <div class="table-responsive mb-4">
    <table class="table table-bordered summary-table">
      <thead class="table-dark">
        <tr>
          <th>Letter</th>
          <% for (let q = 0; q < form.questionCount; q++) { %>
            <th>Q<%= q+1 %></th>
          <% } %>
        </tr>
      </thead>
      <tbody>
        <% letters.slice(0, form.optionCount).forEach(rowLetter => { %>
          <tr>
            <th><%= rowLetter %></th>
            <% for (let q = 0; q < form.questionCount; q++) { 
              let stat = summaryStats[q][rowLetter];
              let count = stat.count;
              let groupList = stat.groups.join(', ');
            %>
              <td 
                class="hover-highlight" 
                data-groups="<%= groupList %>" 
                data-count="<%= count %>"
              >
                <%= count %>
              </td>
            <% } %>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <!-- 3) Detailed Group Results (pick order) -->
  <h2>Detailed Group Results</h2>
  <% if (submissions && submissions.length > 0) { %>
    <% submissions.forEach(sub => { 
      let picksData = [];
      try {
        picksData = JSON.parse(sub.answers);
      } catch(e) {
        picksData = [];
      }
    %>
      <div class="group-section mb-5">
        <h3>Group: <%= sub.groupName %></h3>
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>#</th>
              <% letters.slice(0, form.optionCount).forEach(letter => { %>
                <th><%= letter %></th>
              <% }); %>
            </tr>
          </thead>
          <tbody>
            <% for(let q=0; q<form.questionCount; q++) { 
              let picksForQ = picksData[q] || [];
            %>
              <tr>
                <td><%= q+1 %></td>
                <% letters.slice(0, form.optionCount).forEach(letter => {
                  let pickIndex = picksForQ.indexOf(letter);
                %>
                  <td class="answerCell">
                    <% if (pickIndex >= 0) { %>
                      <div class="pickOrder"><%= pickIndex + 1 %></div>
                    <% } %>
                  </td>
                <% }); %>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    <% }) %>
  <% } else { %>
    <p>No submissions yet.</p>
  <% } %>

  <a href="/console/dashboard" class="btn btn-secondary mt-3">Back to Dashboard</a>
</div>

<!-- Bootstrap JS + Popper (for tooltips if you want them) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // For hover / click
    const cells = document.querySelectorAll('.hover-highlight');
    cells.forEach(cell => {
      const groupList = cell.dataset.groups;
      const count = cell.dataset.count;
      
      // You can set up a tooltip
      cell.setAttribute('data-bs-toggle', 'tooltip');
      cell.setAttribute('data-bs-placement', 'top');
      cell.setAttribute('title', groupList || 'No groups');

      // On click => show alert with group names
      cell.addEventListener('click', () => {
        if (groupList) {
          alert(`Groups (${count}) who first-chose this letter: ${groupList}`);
        } else {
          alert('No groups for this cell');
        }
      });
    });

    // Initialize any Bootstrap tooltips
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
  });
</script>
</body>
</html>
